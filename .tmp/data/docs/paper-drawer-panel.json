{"elements":[{"type":"element","desc":"\n`paper-drawer-panel` contains a drawer panel and a main panel.  The drawer\nand the main panel are side-by-side with drawer on the left.  When the browser\nwindow size is smaller than the `responsiveWidth`, `paper-drawer-panel`\nchanges to narrow layout.  In narrow layout, the drawer will be stacked on top\nof the main panel.  The drawer will slide in/out to hide/reveal the main\npanel.\n\nUse the attribute `drawer` to indicate that the element is the drawer panel and\n`main` to indicate that the element is the main panel.\n\nExample:\n\n    <paper-drawer-panel>\n      <div drawer> Drawer panel... </div>\n      <div main> Main panel... </div>\n    </paper-drawer-panel>\n\nThe drawer and the main panels are not scrollable.  You can set CSS overflow\nproperty on the elements to make them scrollable or use `paper-header-panel`.\n\nExample:\n\n    <paper-drawer-panel>\n      <paper-header-panel drawer>\n        <paper-toolbar></paper-toolbar>\n        <div> Drawer content... </div>\n      </paper-header-panel>\n      <paper-header-panel main>\n        <paper-toolbar></paper-toolbar>\n        <div> Main content... </div>\n      </paper-header-panel>\n    </paper-drawer-panel>\n\nAn element that should toggle the drawer will automatically do so if it's\ngiven the `paper-drawer-toggle` attribute.  Also this element will automatically\nbe hidden in wide layout.\n\nExample:\n\n    <paper-drawer-panel>\n      <paper-header-panel drawer>\n        <paper-toolbar>\n          <div>Application</div>\n        </paper-toolbar>\n        <div> Drawer content... </div>\n      </paper-header-panel>\n      <paper-header-panel main>\n        <paper-toolbar>\n          <paper-icon-button icon=\"menu\" paper-drawer-toggle></paper-icon-button>\n          <div>Title</div>\n        </paper-toolbar>\n        <div> Main content... </div>\n      </paper-header-panel>\n    </paper-drawer-panel>\n\nTo position the drawer to the right, add `right-drawer` attribute.\n\n    <paper-drawer-panel right-drawer>\n      <div drawer> Drawer panel... </div>\n      <div main> Main panel... </div>\n    </paper-drawer-panel>\n\nStyling paper-drawer-panel:\n\nTo change the main container:\n  paper-drawer-panel {\n    --paper-drawer-panel-main-container: {\n      background-color: gray;\n    };\n  }\n\nTo change the drawer container when it's in the left side:\n  paper-drawer-panel {\n    --paper-drawer-panel-left-drawer-container: {\n      background-color: white;\n    };\n  }\n\nTo change the drawer container when it's in the right side:\n\n  paper-drawer-panel {\n    --paper-drawer-panel-right-drawer-container: {\n      background-color: white;\n    };\n  }\n\n","events":[{"desc":"\nFired when the narrow layout changes.\n\n","jsdoc":{"description":"\nFired when the narrow layout changes.\n\n","tags":[{"tag":"event","type":null,"description":"paper-responsive-change {{narrow: boolean}} detail -\n    narrow: true if the panel is in narrow layout."}],"orig":"*\n       * Fired when the narrow layout changes.\n       *\n       * @event paper-responsive-change {{narrow: boolean}} detail -\n       *     narrow: true if the panel is in narrow layout.\n       "},"name":"paper-responsive-change {{narrow: boolean}} detail -\n    narrow: true if the panel is in narrow layout.","params":[]},{"desc":"\nFired when the selected panel changes.\n\nListening for this event is an alternative to observing changes in the `selected` attribute.\nThis event is fired both when a panel is selected and deselected.\nThe `isSelected` detail property contains the selection state.\n\n","jsdoc":{"description":"\nFired when the selected panel changes.\n\nListening for this event is an alternative to observing changes in the `selected` attribute.\nThis event is fired both when a panel is selected and deselected.\nThe `isSelected` detail property contains the selection state.\n\n","tags":[{"tag":"event","type":null,"description":"paper-select {{isSelected: boolean, item: Object}} detail -\n    isSelected: True for selection and false for deselection.\n    item: The panel that the event refers to."}],"orig":"*\n       * Fired when the selected panel changes.\n       *\n       * Listening for this event is an alternative to observing changes in the `selected` attribute.\n       * This event is fired both when a panel is selected and deselected.\n       * The `isSelected` detail property contains the selection state.\n       *\n       * @event paper-select {{isSelected: boolean, item: Object}} detail -\n       *     isSelected: True for selection and false for deselection.\n       *     item: The panel that the event refers to.\n       "},"name":"paper-select {{isSelected: boolean, item: Object}} detail -\n    isSelected: True for selection and false for deselection.\n    item: The panel that the event refers to.","params":[]}],"properties":[{"name":"closeDrawer","type":"Function","desc":"\nCloses the drawer.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"closeDrawer","description":null}]},"function":true},{"name":"defaultSelected","type":"String","desc":"\nThe panel to be selected when `paper-drawer-panel` changes to narrow\nlayout.\n         ","published":true,"default":"main"},{"name":"disableEdgeSwipe","type":"Boolean","desc":"\nIf true, swipe from the edge is disable.\n         ","published":true,"default":false},{"name":"disableSwipe","type":"Boolean","desc":"\nIf true, swipe to open/close the drawer is disabled.\n         ","published":true,"default":false},{"name":"dragging","type":"Boolean","desc":"\nWhether the user is dragging the drawer interactively.\n         ","published":true,"default":false,"readOnly":true,"notify":true},{"name":"drawerToggleAttribute","type":"String","desc":"\nThe attribute on elements that should toggle the drawer on tap, also elements will\nautomatically be hidden in wide layout.\n         ","published":true,"default":"paper-drawer-toggle"},{"name":"drawerWidth","type":"String","desc":"\nWidth of the drawer panel.\n         ","published":true,"default":"256px"},{"name":"edgeSwipeSensitivity","type":"Number","desc":"\nHow many pixels on the side of the screen are sensitive to edge\nswipes and peek.\n         ","published":true,"default":30},{"name":"forceNarrow","type":"Boolean","desc":"\nIf true, ignore `responsiveWidth` setting and force the narrow layout.\n         ","published":true,"default":false},{"name":"hasTransform","type":"Boolean","desc":"\nWhether the browser has support for the transform CSS property.\n         ","published":true,"default":"UNKNOWN"},{"name":"hasWillChange","type":"Boolean","desc":"\nWhether the browser has support for the will-change CSS property.\n         ","published":true,"default":"UNKNOWN"},{"name":"narrow","type":"Boolean","desc":"\nReturns true if the panel is in narrow layout.  This is useful if you\nneed to show/hide elements based on the layout.\n         ","published":true,"reflectToAttribute":"UNKNOWN","default":false,"readOnly":true,"notify":true},{"name":"openDrawer","type":"Function","desc":"\nOpens the drawer.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"openDrawer","description":null}]},"function":true},{"name":"peeking","type":"Boolean","desc":"\nWhether the drawer is peeking out from the edge.\n         ","published":true,"default":false,"readOnly":true,"notify":true},{"name":"responsiveWidth","type":"String","desc":"\nMax-width when the panel changes to narrow layout.\n         ","published":true,"default":"640px"},{"name":"rightDrawer","type":"Boolean","desc":"\nIf true, position the drawer to the right.\n         ","published":true,"default":false},{"name":"selected","type":"String","desc":"\nThe panel that is being selected. `drawer` for the drawer panel and\n`main` for the main panel.\n         ","published":true,"reflectToAttribute":"UNKNOWN","notify":true,"default":null},{"name":"togglePanel","type":"Function","desc":"\nToggles the panel open and closed.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"togglePanel","description":null}]},"function":true},{"name":"transition","type":"Boolean","desc":"\nWhether the transition is enabled.\n         ","published":true,"default":false},{"name":"_computeDrawerStyle","type":"Function","params":[{"name":"drawerWidth"}],"private":true,"function":true,"default":""},{"name":"_computeIronSelectorClass","type":"Function","params":[{"name":"narrow"},{"name":"transition"},{"name":"dragging"},{"name":"rightDrawer"}],"private":true,"function":true,"default":""},{"name":"_computeMainStyle","type":"Function","params":[{"name":"narrow"},{"name":"rightDrawer"},{"name":"drawerWidth"}],"private":true,"function":true,"default":""},{"name":"_computeMediaQuery","type":"Function","params":[{"name":"forceNarrow"},{"name":"responsiveWidth"}],"private":true,"function":true,"default":""},{"name":"_computeSwipeOverlayHidden","type":"Function","params":[{"name":"narrow"},{"name":"disableEdgeSwipe"}],"private":true,"function":true,"default":""},{"name":"_downHandler","type":"Function","params":[{"name":"e"}],"private":true,"function":true,"default":""},{"name":"_forceNarrowChanged","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_isEdgeTouch","type":"Function","params":[{"name":"e"}],"private":true,"function":true,"default":""},{"name":"_isMainSelected","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_moveDrawer","type":"Function","params":[{"name":"translateX"}],"private":true,"function":true,"default":""},{"name":"_onQueryMatchesChanged","type":"Function","params":[{"name":"e"}],"private":true,"function":true,"default":""},{"name":"_onTap","type":"Function","params":[{"name":"e"}],"private":true,"function":true,"default":""},{"name":"_onTrack","type":"Function","params":[{"name":"e"}],"private":true,"function":true,"default":""},{"name":"_responsiveChange","type":"Function","params":[{"name":"narrow"}],"private":true,"function":true,"default":""},{"name":"_startEdgePeek","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_stopEdgePeek","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_swipeAllowed","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_trackEnd","type":"Function","params":[{"name":"e"}],"private":true,"function":true,"default":""},{"name":"_trackStart","type":"Function","params":[{"name":"event"}],"private":true,"function":true,"default":""},{"name":"_trackX","type":"Function","params":[{"name":"e"}],"private":true,"function":true,"default":""},{"name":"_transformForTranslateX","type":"Function","params":[{"name":"translateX"}],"private":true,"function":true,"default":""},{"name":"_translateXForDeltaX","type":"Function","params":[{"name":"deltaX"}],"private":true,"function":true,"default":""},{"name":"_upHandler","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"listeners","type":"Object","private":true,"configuration":true,"default":""},{"name":"observers","type":"Array","private":true,"configuration":true,"default":""},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true,"default":""}],"is":"paper-drawer-panel","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper elements"},{"tag":"element","type":null,"description":"paper-drawer-panel"},{"tag":"demo","type":null,"name":"demo/index.html","description":""},{"tag":"hero","type":null,"name":"hero.svg","description":null}]},"demos":[{"desc":"demo","path":"demo/index.html"}],"hero":"hero.svg"}],"behaviors":[],"features":[],"elementsByTagName":{"paper-drawer-panel":{"type":"element","desc":"\n`paper-drawer-panel` contains a drawer panel and a main panel.  The drawer\nand the main panel are side-by-side with drawer on the left.  When the browser\nwindow size is smaller than the `responsiveWidth`, `paper-drawer-panel`\nchanges to narrow layout.  In narrow layout, the drawer will be stacked on top\nof the main panel.  The drawer will slide in/out to hide/reveal the main\npanel.\n\nUse the attribute `drawer` to indicate that the element is the drawer panel and\n`main` to indicate that the element is the main panel.\n\nExample:\n\n    <paper-drawer-panel>\n      <div drawer> Drawer panel... </div>\n      <div main> Main panel... </div>\n    </paper-drawer-panel>\n\nThe drawer and the main panels are not scrollable.  You can set CSS overflow\nproperty on the elements to make them scrollable or use `paper-header-panel`.\n\nExample:\n\n    <paper-drawer-panel>\n      <paper-header-panel drawer>\n        <paper-toolbar></paper-toolbar>\n        <div> Drawer content... </div>\n      </paper-header-panel>\n      <paper-header-panel main>\n        <paper-toolbar></paper-toolbar>\n        <div> Main content... </div>\n      </paper-header-panel>\n    </paper-drawer-panel>\n\nAn element that should toggle the drawer will automatically do so if it's\ngiven the `paper-drawer-toggle` attribute.  Also this element will automatically\nbe hidden in wide layout.\n\nExample:\n\n    <paper-drawer-panel>\n      <paper-header-panel drawer>\n        <paper-toolbar>\n          <div>Application</div>\n        </paper-toolbar>\n        <div> Drawer content... </div>\n      </paper-header-panel>\n      <paper-header-panel main>\n        <paper-toolbar>\n          <paper-icon-button icon=\"menu\" paper-drawer-toggle></paper-icon-button>\n          <div>Title</div>\n        </paper-toolbar>\n        <div> Main content... </div>\n      </paper-header-panel>\n    </paper-drawer-panel>\n\nTo position the drawer to the right, add `right-drawer` attribute.\n\n    <paper-drawer-panel right-drawer>\n      <div drawer> Drawer panel... </div>\n      <div main> Main panel... </div>\n    </paper-drawer-panel>\n\nStyling paper-drawer-panel:\n\nTo change the main container:\n  paper-drawer-panel {\n    --paper-drawer-panel-main-container: {\n      background-color: gray;\n    };\n  }\n\nTo change the drawer container when it's in the left side:\n  paper-drawer-panel {\n    --paper-drawer-panel-left-drawer-container: {\n      background-color: white;\n    };\n  }\n\nTo change the drawer container when it's in the right side:\n\n  paper-drawer-panel {\n    --paper-drawer-panel-right-drawer-container: {\n      background-color: white;\n    };\n  }\n\n","events":[{"desc":"\nFired when the narrow layout changes.\n\n","jsdoc":{"description":"\nFired when the narrow layout changes.\n\n","tags":[{"tag":"event","type":null,"description":"paper-responsive-change {{narrow: boolean}} detail -\n    narrow: true if the panel is in narrow layout."}],"orig":"*\n       * Fired when the narrow layout changes.\n       *\n       * @event paper-responsive-change {{narrow: boolean}} detail -\n       *     narrow: true if the panel is in narrow layout.\n       "},"name":"paper-responsive-change {{narrow: boolean}} detail -\n    narrow: true if the panel is in narrow layout.","params":[]},{"desc":"\nFired when the selected panel changes.\n\nListening for this event is an alternative to observing changes in the `selected` attribute.\nThis event is fired both when a panel is selected and deselected.\nThe `isSelected` detail property contains the selection state.\n\n","jsdoc":{"description":"\nFired when the selected panel changes.\n\nListening for this event is an alternative to observing changes in the `selected` attribute.\nThis event is fired both when a panel is selected and deselected.\nThe `isSelected` detail property contains the selection state.\n\n","tags":[{"tag":"event","type":null,"description":"paper-select {{isSelected: boolean, item: Object}} detail -\n    isSelected: True for selection and false for deselection.\n    item: The panel that the event refers to."}],"orig":"*\n       * Fired when the selected panel changes.\n       *\n       * Listening for this event is an alternative to observing changes in the `selected` attribute.\n       * This event is fired both when a panel is selected and deselected.\n       * The `isSelected` detail property contains the selection state.\n       *\n       * @event paper-select {{isSelected: boolean, item: Object}} detail -\n       *     isSelected: True for selection and false for deselection.\n       *     item: The panel that the event refers to.\n       "},"name":"paper-select {{isSelected: boolean, item: Object}} detail -\n    isSelected: True for selection and false for deselection.\n    item: The panel that the event refers to.","params":[]}],"properties":[{"name":"closeDrawer","type":"Function","desc":"\nCloses the drawer.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"closeDrawer","description":null}]},"function":true},{"name":"defaultSelected","type":"String","desc":"\nThe panel to be selected when `paper-drawer-panel` changes to narrow\nlayout.\n         ","published":true,"default":"main"},{"name":"disableEdgeSwipe","type":"Boolean","desc":"\nIf true, swipe from the edge is disable.\n         ","published":true,"default":false},{"name":"disableSwipe","type":"Boolean","desc":"\nIf true, swipe to open/close the drawer is disabled.\n         ","published":true,"default":false},{"name":"dragging","type":"Boolean","desc":"\nWhether the user is dragging the drawer interactively.\n         ","published":true,"default":false,"readOnly":true,"notify":true},{"name":"drawerToggleAttribute","type":"String","desc":"\nThe attribute on elements that should toggle the drawer on tap, also elements will\nautomatically be hidden in wide layout.\n         ","published":true,"default":"paper-drawer-toggle"},{"name":"drawerWidth","type":"String","desc":"\nWidth of the drawer panel.\n         ","published":true,"default":"256px"},{"name":"edgeSwipeSensitivity","type":"Number","desc":"\nHow many pixels on the side of the screen are sensitive to edge\nswipes and peek.\n         ","published":true,"default":30},{"name":"forceNarrow","type":"Boolean","desc":"\nIf true, ignore `responsiveWidth` setting and force the narrow layout.\n         ","published":true,"default":false},{"name":"hasTransform","type":"Boolean","desc":"\nWhether the browser has support for the transform CSS property.\n         ","published":true,"default":"UNKNOWN"},{"name":"hasWillChange","type":"Boolean","desc":"\nWhether the browser has support for the will-change CSS property.\n         ","published":true,"default":"UNKNOWN"},{"name":"narrow","type":"Boolean","desc":"\nReturns true if the panel is in narrow layout.  This is useful if you\nneed to show/hide elements based on the layout.\n         ","published":true,"reflectToAttribute":"UNKNOWN","default":false,"readOnly":true,"notify":true},{"name":"openDrawer","type":"Function","desc":"\nOpens the drawer.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"openDrawer","description":null}]},"function":true},{"name":"peeking","type":"Boolean","desc":"\nWhether the drawer is peeking out from the edge.\n         ","published":true,"default":false,"readOnly":true,"notify":true},{"name":"responsiveWidth","type":"String","desc":"\nMax-width when the panel changes to narrow layout.\n         ","published":true,"default":"640px"},{"name":"rightDrawer","type":"Boolean","desc":"\nIf true, position the drawer to the right.\n         ","published":true,"default":false},{"name":"selected","type":"String","desc":"\nThe panel that is being selected. `drawer` for the drawer panel and\n`main` for the main panel.\n         ","published":true,"reflectToAttribute":"UNKNOWN","notify":true,"default":null},{"name":"togglePanel","type":"Function","desc":"\nToggles the panel open and closed.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"togglePanel","description":null}]},"function":true},{"name":"transition","type":"Boolean","desc":"\nWhether the transition is enabled.\n         ","published":true,"default":false},{"name":"_computeDrawerStyle","type":"Function","params":[{"name":"drawerWidth"}],"private":true,"function":true,"default":""},{"name":"_computeIronSelectorClass","type":"Function","params":[{"name":"narrow"},{"name":"transition"},{"name":"dragging"},{"name":"rightDrawer"}],"private":true,"function":true,"default":""},{"name":"_computeMainStyle","type":"Function","params":[{"name":"narrow"},{"name":"rightDrawer"},{"name":"drawerWidth"}],"private":true,"function":true,"default":""},{"name":"_computeMediaQuery","type":"Function","params":[{"name":"forceNarrow"},{"name":"responsiveWidth"}],"private":true,"function":true,"default":""},{"name":"_computeSwipeOverlayHidden","type":"Function","params":[{"name":"narrow"},{"name":"disableEdgeSwipe"}],"private":true,"function":true,"default":""},{"name":"_downHandler","type":"Function","params":[{"name":"e"}],"private":true,"function":true,"default":""},{"name":"_forceNarrowChanged","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_isEdgeTouch","type":"Function","params":[{"name":"e"}],"private":true,"function":true,"default":""},{"name":"_isMainSelected","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_moveDrawer","type":"Function","params":[{"name":"translateX"}],"private":true,"function":true,"default":""},{"name":"_onQueryMatchesChanged","type":"Function","params":[{"name":"e"}],"private":true,"function":true,"default":""},{"name":"_onTap","type":"Function","params":[{"name":"e"}],"private":true,"function":true,"default":""},{"name":"_onTrack","type":"Function","params":[{"name":"e"}],"private":true,"function":true,"default":""},{"name":"_responsiveChange","type":"Function","params":[{"name":"narrow"}],"private":true,"function":true,"default":""},{"name":"_startEdgePeek","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_stopEdgePeek","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_swipeAllowed","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_trackEnd","type":"Function","params":[{"name":"e"}],"private":true,"function":true,"default":""},{"name":"_trackStart","type":"Function","params":[{"name":"event"}],"private":true,"function":true,"default":""},{"name":"_trackX","type":"Function","params":[{"name":"e"}],"private":true,"function":true,"default":""},{"name":"_transformForTranslateX","type":"Function","params":[{"name":"translateX"}],"private":true,"function":true,"default":""},{"name":"_translateXForDeltaX","type":"Function","params":[{"name":"deltaX"}],"private":true,"function":true,"default":""},{"name":"_upHandler","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"listeners","type":"Object","private":true,"configuration":true,"default":""},{"name":"observers","type":"Array","private":true,"configuration":true,"default":""},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true,"default":""}],"is":"paper-drawer-panel","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper elements"},{"tag":"element","type":null,"description":"paper-drawer-panel"},{"tag":"demo","type":null,"name":"demo/index.html","description":""},{"tag":"hero","type":null,"name":"hero.svg","description":null}]},"demos":[{"desc":"demo","path":"demo/index.html"}],"hero":"hero.svg"}}}