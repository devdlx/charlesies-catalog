{"elements":[{"type":"element","desc":"\n\nMaterial Design: <a href=\"http://www.google.com/design/spec/components/buttons.html\">Buttons</a>\n\n`paper-button` is a button. When the user touches the button, a ripple effect emanates\nfrom the point of contact. It may be flat or raised. A raised button is styled with a\nshadow.\n\nExample:\n\n    <paper-button>flat button</paper-button>\n    <paper-button raised>raised button</paper-button>\n    <paper-button noink>No ripple effect</paper-button>\n\nYou may use custom DOM in the button body to create a variety of buttons. For example, to\ncreate a button with an icon and some text:\n\n    <paper-button>\n      <core-icon icon=\"favorite\"></core-icon>\n      custom button content\n    </paper-button>\n\n### Styling\n\nStyle the button with CSS as you would a normal DOM element.\n\n    /* make #my-button green with yellow text */\n    #my-button {\n        background: green;\n        color: yellow;\n    }\n\nBy default, the ripple is the same color as the foreground at 25% opacity. You may\ncustomize the color using this selector:\n\n    /* make #my-button use a blue ripple instead of foreground color */\n    #my-button::shadow paper-ripple {\n      color: blue;\n    }\n\nThe opacity of the ripple is not customizable via CSS.\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-button-flat-focus-color` | Background color of a focused flat button | `--paper-grey-200`\n`--paper-button` | Mixin applied to the button | `{}`\n`--paper-button-disabled` | Mixin applied to the disabled button | `{}`\n\n","events":[],"properties":[{"name":"raised","type":"Boolean","desc":"\nIf true, the button should be styled with a shadow.\n       ","published":true,"reflectToAttribute":"UNKNOWN","default":false},{"name":"_calculateElevation","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_computeContentClass","type":"Function","params":[{"name":"receivedFocusFromKeyboard"}],"private":true,"function":true,"default":""}],"is":"paper-button","behaviors":["Polymer.PaperButtonBehavior"],"jsdoc":{"tags":[{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}],"behaviors":[],"features":[],"elementsByTagName":{"paper-button":{"type":"element","desc":"\n\nMaterial Design: <a href=\"http://www.google.com/design/spec/components/buttons.html\">Buttons</a>\n\n`paper-button` is a button. When the user touches the button, a ripple effect emanates\nfrom the point of contact. It may be flat or raised. A raised button is styled with a\nshadow.\n\nExample:\n\n    <paper-button>flat button</paper-button>\n    <paper-button raised>raised button</paper-button>\n    <paper-button noink>No ripple effect</paper-button>\n\nYou may use custom DOM in the button body to create a variety of buttons. For example, to\ncreate a button with an icon and some text:\n\n    <paper-button>\n      <core-icon icon=\"favorite\"></core-icon>\n      custom button content\n    </paper-button>\n\n### Styling\n\nStyle the button with CSS as you would a normal DOM element.\n\n    /* make #my-button green with yellow text */\n    #my-button {\n        background: green;\n        color: yellow;\n    }\n\nBy default, the ripple is the same color as the foreground at 25% opacity. You may\ncustomize the color using this selector:\n\n    /* make #my-button use a blue ripple instead of foreground color */\n    #my-button::shadow paper-ripple {\n      color: blue;\n    }\n\nThe opacity of the ripple is not customizable via CSS.\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-button-flat-focus-color` | Background color of a focused flat button | `--paper-grey-200`\n`--paper-button` | Mixin applied to the button | `{}`\n`--paper-button-disabled` | Mixin applied to the disabled button | `{}`\n\n","events":[],"properties":[{"name":"raised","type":"Boolean","desc":"\nIf true, the button should be styled with a shadow.\n       ","published":true,"reflectToAttribute":"UNKNOWN","default":false},{"name":"_calculateElevation","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_computeContentClass","type":"Function","params":[{"name":"receivedFocusFromKeyboard"}],"private":true,"function":true,"default":""}],"is":"paper-button","behaviors":["Polymer.PaperButtonBehavior"],"jsdoc":{"tags":[{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}}}