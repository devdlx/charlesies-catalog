{"elements":[{"type":"element","desc":"\n  `iron-selector` is an element which can be used to manage a list of elements\n  that can be selected.  Tapping on the item will make the item selected.  The `selected` indicates\n  which item is being selected.  The default is to use the index of the item.\n\n  Example:\n\n      <iron-selector selected=\"0\">\n        <div>Item 1</div>\n        <div>Item 2</div>\n        <div>Item 3</div>\n      </iron-selector>\n\n  If you want to use the attribute value of an element for `selected` instead of the index,\n  set `attrForSelected` to the name of the attribute.  For example, if you want to select item by\n  `name`, set `attrForSelected` to `name`.\n\n  Example:\n\n      <iron-selector attr-for-selected=\"name\" selected=\"foo\">\n        <div name=\"foo\">Foo</div>\n        <div name=\"bar\">Bar</div>\n        <div name=\"zot\">Zot</div>\n      </iron-selector>\n\n  `iron-selector` is not styled. Use the `iron-selected` CSS class to style the selected element.\n\n  Example:\n\n      <style>\n        .iron-selected {\n          background: #eee;\n        }\n      </style>\n\n      ...\n\n      <iron-selector selected=\"0\">\n        <div>Item 1</div>\n        <div>Item 2</div>\n        <div>Item 3</div>\n      </iron-selector>\n\n  ","events":[],"properties":[],"is":"iron-selector","behaviors":["Polymer.IronMultiSelectableBehavior"],"jsdoc":{"tags":[{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}],"behaviors":[{"type":"behavior","desc":"","events":[],"jsdoc":{"description":"","tags":[{"tag":"polymerBehavior","type":null,"name":"Polymer.IronMultiSelectableBehavior","description":null}],"orig":"* @polymerBehavior Polymer.IronMultiSelectableBehavior "},"demos":[],"is":"Polymer.IronMultiSelectableBehavior","properties":[{"name":"multi","type":"Boolean","desc":"\nIf true, multiple selections are allowed.\n       ","published":true,"default":false,"jsdoc":{"description":"\nIf true, multiple selections are allowed.\n       ","tags":[],"orig":"*\n       * If true, multiple selections are allowed.\n       "}},{"name":"multiChanged","type":"Function","params":[{"name":"multi"}],"function":true,"default":""},{"name":"select","type":"Function","desc":"\nSelects the given value. If the `multi` property is true, then the selected state of the\n`value` will be toggled; otherwise the `value` will be selected.\n\n","params":[{"name":"value","type":"string","desc":"the value to select."}],"jsdoc":{"description":"\nSelects the given value. If the `multi` property is true, then the selected state of the\n`value` will be toggled; otherwise the `value` will be selected.\n\n","tags":[{"tag":"method","type":null,"name":"select","description":null},{"tag":"param","type":"string","name":"value","description":"the value to select."}],"orig":"*\n     * Selects the given value. If the `multi` property is true, then the selected state of the\n     * `value` will be toggled; otherwise the `value` will be selected.\n     *\n     * @method select\n     * @param {string} value the value to select.\n     "},"function":true},{"name":"selectedItems","type":"Array","desc":"\nReturns an array of currently selected items.\n       ","published":true,"readOnly":true,"notify":true,"jsdoc":{"description":"\nReturns an array of currently selected items.\n       ","tags":[],"orig":"*\n       * Returns an array of currently selected items.\n       "}},{"name":"selectedValues","type":"Array","desc":"\nGets or sets the selected elements. This is used instead of `selected` when `multi`\nis true.\n       ","published":true,"notify":true,"jsdoc":{"description":"\nGets or sets the selected elements. This is used instead of `selected` when `multi`\nis true.\n       ","tags":[],"orig":"*\n       * Gets or sets the selected elements. This is used instead of `selected` when `multi`\n       * is true.\n       "}},{"name":"_selectMulti","type":"Function","params":[{"name":"values"}],"private":true,"function":true,"default":""},{"name":"_selectionChange","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_toggleSelected","type":"Function","params":[{"name":"value"}],"private":true,"function":true,"default":""},{"name":"_updateSelected","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"observers","type":"Array","private":true,"configuration":true,"default":""}],"behaviors":["Polymer.IronSelectableBehavior"]},{"type":"behavior","desc":"","events":[],"jsdoc":{"description":"","tags":[{"tag":"polymerBehavior","type":null,"name":null,"description":null}],"orig":"* @polymerBehavior "},"demos":[],"is":"Polymer.IronSelectableBehavior","properties":[{"name":"activateEvent","type":"string","desc":"\nThe event that fires from items when they are selected. Selectable\nwill listen for this event from items and update the selection state.\nSet to empty string to listen to no events.\n\n","published":true,"default":"'tap'","jsdoc":{"description":"\nThe event that fires from items when they are selected. Selectable\nwill listen for this event from items and update the selection state.\nSet to empty string to listen to no events.\n\n","tags":[{"tag":"attribute","type":null,"description":"activateEvent"},{"tag":"type","type":"string","description":null},{"tag":"default","type":null,"description":"'tap'"}],"orig":"*\n       * The event that fires from items when they are selected. Selectable\n       * will listen for this event from items and update the selection state.\n       * Set to empty string to listen to no events.\n       *\n       * @attribute activateEvent\n       * @type {string}\n       * @default 'tap'\n       "}},{"name":"attrForSelected","type":"string","desc":"\nIf you want to use the attribute value of an element for `selected` instead of the index,\nset this to the name of the attribute.\n\n","published":true,"default":null,"jsdoc":{"description":"\nIf you want to use the attribute value of an element for `selected` instead of the index,\nset this to the name of the attribute.\n\n","tags":[{"tag":"attribute","type":null,"description":"attrForSelected"},{"tag":"type","type":"string","description":null}],"orig":"*\n       * If you want to use the attribute value of an element for `selected` instead of the index,\n       * set this to the name of the attribute.\n       *\n       * @attribute attrForSelected\n       * @type {string}\n       "}},{"name":"excludedLocalNames","type":"Object","default":""},{"name":"indexOf","type":"Function","desc":"\nReturns the index of the given item.\n\n","params":[{"name":"item","type":"Object","desc":null}],"jsdoc":{"description":"\nReturns the index of the given item.\n\n","tags":[{"tag":"method","type":null,"name":"indexOf","description":null},{"tag":"param","type":"Object","name":"item","description":null}],"orig":"*\n     * Returns the index of the given item.\n     *\n     * @method indexOf\n     * @param {Object} item\n     * @returns Returns the index of the item\n     "},"function":true},{"name":"items","type":"Function","desc":"\nReturns an array of selectable items.\n\n","params":[],"jsdoc":{"description":"\nReturns an array of selectable items.\n\n","tags":[],"orig":"*\n     * Returns an array of selectable items.\n     *\n     * @property items\n     * @type Array\n     "},"function":true},{"name":"select","type":"Function","desc":"\nSelects the given value.\n\n","params":[{"name":"value","type":"string","desc":"the value to select."}],"jsdoc":{"description":"\nSelects the given value.\n\n","tags":[{"tag":"method","type":null,"name":"select","description":null},{"tag":"param","type":"string","name":"value","description":"the value to select."}],"orig":"*\n     * Selects the given value.\n     *\n     * @method select\n     * @param {string} value the value to select.\n     "},"function":true},{"name":"selectNext","type":"Function","desc":"\nSelects the next item.\n\n","params":[],"jsdoc":{"description":"\nSelects the next item.\n\n","tags":[{"tag":"method","type":null,"name":"selectNext","description":null}],"orig":"*\n     * Selects the next item.\n     *\n     * @method selectNext\n     "},"function":true},{"name":"selectPrevious","type":"Function","desc":"\nSelects the previous item.\n\n","params":[],"jsdoc":{"description":"\nSelects the previous item.\n\n","tags":[{"tag":"method","type":null,"name":"selectPrevious","description":null}],"orig":"*\n     * Selects the previous item.\n     *\n     * @method selectPrevious\n     "},"function":true},{"name":"selectable","type":"string","desc":"\nThis is a CSS selector sting.  If this is set, only items that matches the CSS selector\nare selectable.\n\n","published":true,"jsdoc":{"description":"\nThis is a CSS selector sting.  If this is set, only items that matches the CSS selector\nare selectable.\n\n","tags":[{"tag":"attribute","type":null,"description":"selectable"},{"tag":"type","type":"string","description":null}],"orig":"*\n       * This is a CSS selector sting.  If this is set, only items that matches the CSS selector\n       * are selectable.\n       *\n       * @attribute selectable\n       * @type {string}\n       "}},{"name":"selected","type":"string","desc":"\nGets or sets the selected element. The default is to use the index of the item.\n\n","published":true,"notify":true,"jsdoc":{"description":"\nGets or sets the selected element. The default is to use the index of the item.\n\n","tags":[{"tag":"attribute","type":null,"description":"selected"},{"tag":"type","type":"string","description":null}],"orig":"*\n       * Gets or sets the selected element. The default is to use the index of the item.\n       *\n       * @attribute selected\n       * @type {string}\n       "}},{"name":"selectedAttribute","type":"string","desc":"\nThe attribute to set on elements when selected.\n\n","published":true,"default":null,"jsdoc":{"description":"\nThe attribute to set on elements when selected.\n\n","tags":[{"tag":"attribute","type":null,"description":"selectedAttribute"},{"tag":"type","type":"string","description":null}],"orig":"*\n       * The attribute to set on elements when selected.\n       *\n       * @attribute selectedAttribute\n       * @type {string}\n       "}},{"name":"selectedClass","type":"string","desc":"\nThe class to set on elements when selected.\n\n","published":true,"default":"iron-selected","jsdoc":{"description":"\nThe class to set on elements when selected.\n\n","tags":[{"tag":"attribute","type":null,"description":"selectedClass"},{"tag":"type","type":"string","description":null}],"orig":"*\n       * The class to set on elements when selected.\n       *\n       * @attribute selectedClass\n       * @type {string}\n       "}},{"name":"selectedItem","type":"Object","desc":"\nReturns the currently selected item.\n\n","published":true,"readOnly":true,"notify":true,"jsdoc":{"description":"\nReturns the currently selected item.\n\n","tags":[{"tag":"attribute","type":null,"description":"selectedItem"},{"tag":"type","type":"Object","description":null}],"orig":"*\n       * Returns the currently selected item.\n       *\n       * @attribute selectedItem\n       * @type {Object}\n       "}},{"name":"_activateEventChanged","type":"Function","desc":"this.removeEventListener(eventName, this._bindActivateHandler);","params":[{"name":"eventName"},{"name":"old"}],"jsdoc":{"description":"this.removeEventListener(eventName, this._bindActivateHandler);","tags":[],"orig":"this.removeEventListener(eventName, this._bindActivateHandler);"},"private":true,"function":true},{"name":"_activateHandler","type":"Function","params":[{"name":"e"}],"private":true,"function":true,"default":""},{"name":"_addListener","type":"Function","params":[{"name":"eventName"}],"private":true,"function":true,"default":""},{"name":"_applySelection","type":"Function","params":[{"name":"item"},{"name":"isSelected"}],"private":true,"function":true,"default":""},{"name":"_filterItem","type":"Function","params":[{"name":"node"}],"private":true,"function":true,"default":""},{"name":"_indexToValue","type":"Function","params":[{"name":"index"}],"private":true,"function":true,"default":""},{"name":"_itemActivate","type":"Function","params":[{"name":"value"},{"name":"item"}],"private":true,"function":true,"default":""},{"name":"_observeContent","type":"Function","desc":" observe content changes under the given node.","params":[{"name":"node"}],"jsdoc":{"description":" observe content changes under the given node.","tags":[],"orig":" observe content changes under the given node."},"private":true,"function":true},{"name":"_observeItems","type":"Function","desc":" observe items change under the given node.","params":[{"name":"node"}],"jsdoc":{"description":" observe items change under the given node.","tags":[],"orig":" observe items change under the given node."},"private":true,"function":true},{"name":"_removeListener","type":"Function","params":[{"name":"eventName"}],"private":true,"function":true,"default":""},{"name":"_selectSelected","type":"Function","params":[{"name":"selected"}],"private":true,"function":true,"default":""},{"name":"_selectionChange","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_updateSelected","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_valueForItem","type":"Function","params":[{"name":"item"}],"private":true,"function":true,"default":""},{"name":"_valueToIndex","type":"Function","params":[{"name":"value"}],"private":true,"function":true,"default":""},{"name":"_valueToItem","type":"Function","params":[{"name":"value"}],"private":true,"function":true,"default":""},{"name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true,"default":""},{"name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true,"default":""},{"name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true,"default":""},{"name":"observers","type":"Array","private":true,"configuration":true,"default":""}]}],"features":[],"elementsByTagName":{"iron-selector":{"type":"element","desc":"\n  `iron-selector` is an element which can be used to manage a list of elements\n  that can be selected.  Tapping on the item will make the item selected.  The `selected` indicates\n  which item is being selected.  The default is to use the index of the item.\n\n  Example:\n\n      <iron-selector selected=\"0\">\n        <div>Item 1</div>\n        <div>Item 2</div>\n        <div>Item 3</div>\n      </iron-selector>\n\n  If you want to use the attribute value of an element for `selected` instead of the index,\n  set `attrForSelected` to the name of the attribute.  For example, if you want to select item by\n  `name`, set `attrForSelected` to `name`.\n\n  Example:\n\n      <iron-selector attr-for-selected=\"name\" selected=\"foo\">\n        <div name=\"foo\">Foo</div>\n        <div name=\"bar\">Bar</div>\n        <div name=\"zot\">Zot</div>\n      </iron-selector>\n\n  `iron-selector` is not styled. Use the `iron-selected` CSS class to style the selected element.\n\n  Example:\n\n      <style>\n        .iron-selected {\n          background: #eee;\n        }\n      </style>\n\n      ...\n\n      <iron-selector selected=\"0\">\n        <div>Item 1</div>\n        <div>Item 2</div>\n        <div>Item 3</div>\n      </iron-selector>\n\n  ","events":[],"properties":[],"is":"iron-selector","behaviors":["Polymer.IronMultiSelectableBehavior"],"jsdoc":{"tags":[{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}}}