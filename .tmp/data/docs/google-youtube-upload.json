{"elements":[{"type":"element","desc":"\nElement enabling you to upload videos to YouTube.\n\n##### Examples\n\nManual upload with a `Video Upload` button once a video file is selected:\n\n    <google-youtube-upload client-id=\"...\"></google-youtube-upload>\n\nAutomatic upload on video file select, with a custom title, and 'unlisted' privacy:\n\n    <google-youtube-upload\n      auto\n      video-title=\"My Awesome Video\"\n      privacy-status=\"unlisted\"\n      client-id=\"...\">\n    </google-youtube-upload>\n\n","events":[{"desc":"\nFired when server-side processing is successful and the video is\navailable for playback on YouTube.\n\nThe video can be played at `https://youtu.be/VIDEO_ID` and can be\nembedded using the\n[`google-youtube`](https://github.com/GoogleWebComponents/google-youtube) element.\n\n`e.detail` is set to the YouTube video id of the video.\n\n","jsdoc":{"description":"\nFired when server-side processing is successful and the video is\navailable for playback on YouTube.\n\nThe video can be played at `https://youtu.be/VIDEO_ID` and can be\nembedded using the\n[`google-youtube`](https://github.com/GoogleWebComponents/google-youtube) element.\n\n`e.detail` is set to the YouTube video id of the video.\n\n","tags":[{"tag":"event","type":null,"description":"youtube-processing-complete"},{"tag":"param","type":"Object","name":"e","description":"Event parameters"}],"orig":"*\n       * Fired when server-side processing is successful and the video is\n       * available for playback on YouTube.\n       *\n       * The video can be played at `https://youtu.be/VIDEO_ID` and can be\n       * embedded using the\n       * [`google-youtube`](https://github.com/GoogleWebComponents/google-youtube) element.\n       *\n       * `e.detail` is set to the YouTube video id of the video.\n       *\n       * @event youtube-processing-complete\n       * @param {Object} e Event parameters\n       "},"name":"youtube-processing-complete","params":[{"type":"Object","desc":"Event parameters","name":"e"}]},{"desc":"\nFired when the video\n[failed transcoding](https://support.google.com/youtube/topic/2888603?hl=en&ref_topic=16547)\nand can't be played on YouTube.\n\n`e.detail` is set to a\n[status](https://developers.google.com/youtube/v3/docs/videos#status)\nobject which has more details about the failure.\n\n","jsdoc":{"description":"\nFired when the video\n[failed transcoding](https://support.google.com/youtube/topic/2888603?hl=en&ref_topic=16547)\nand can't be played on YouTube.\n\n`e.detail` is set to a\n[status](https://developers.google.com/youtube/v3/docs/videos#status)\nobject which has more details about the failure.\n\n","tags":[{"tag":"event","type":null,"description":"youtube-processing-fail"},{"tag":"param","type":"Object","name":"e","description":"Event parameters"}],"orig":"*\n       * Fired when the video\n       * [failed transcoding](https://support.google.com/youtube/topic/2888603?hl=en&ref_topic=16547)\n       * and can't be played on YouTube.\n       *\n       * `e.detail` is set to a\n       * [status](https://developers.google.com/youtube/v3/docs/videos#status)\n       * object which has more details about the failure.\n       *\n       * @event youtube-processing-fail\n       * @param {Object} e Event parameters\n       "},"name":"youtube-processing-fail","params":[{"type":"Object","desc":"Event parameters","name":"e"}]},{"desc":"\nFired while server-side processing is in progress.\n\nServer-side processing can take an\n[unpredictable amount of time](https://support.google.com/youtube/answer/71674?hl=en&ref_topic=2888603),\nand these events will be periodically fired each time the processing status is polled.\n\n`e.detail` is set to a\n[status](https://developers.google.com/youtube/v3/docs/videos#status)\nobject.\n\n","jsdoc":{"description":"\nFired while server-side processing is in progress.\n\nServer-side processing can take an\n[unpredictable amount of time](https://support.google.com/youtube/answer/71674?hl=en&ref_topic=2888603),\nand these events will be periodically fired each time the processing status is polled.\n\n`e.detail` is set to a\n[status](https://developers.google.com/youtube/v3/docs/videos#status)\nobject.\n\n","tags":[{"tag":"event","type":null,"description":"youtube-processing-poll"},{"tag":"param","type":"Object","name":"e","description":"Event parameters"}],"orig":"*\n       * Fired while server-side processing is in progress.\n       *\n       * Server-side processing can take an\n       * [unpredictable amount of time](https://support.google.com/youtube/answer/71674?hl=en&ref_topic=2888603),\n       * and these events will be periodically fired each time the processing status is polled.\n       *\n       * `e.detail` is set to a\n       * [status](https://developers.google.com/youtube/v3/docs/videos#status)\n       * object.\n       *\n       * @event youtube-processing-poll\n       * @param {Object} e Event parameters\n       "},"name":"youtube-processing-poll","params":[{"type":"Object","desc":"Event parameters","name":"e"}]},{"desc":"\nFired when video upload has completed, and YouTube has begun processing the video.\n\nAt this point, the video is not yet playable, and there is no guarantee that\nthe server-side YouTube processing will succeed.\n\nOne or more `youtube-processing-poll` events will then be fired after this event,\nfollowed by either a `youtube-processing-complete` or `youtube-processing-fail`.\n\n`e.detail` is set to the YouTube video id of the video.\n\n","jsdoc":{"description":"\nFired when video upload has completed, and YouTube has begun processing the video.\n\nAt this point, the video is not yet playable, and there is no guarantee that\nthe server-side YouTube processing will succeed.\n\nOne or more `youtube-processing-poll` events will then be fired after this event,\nfollowed by either a `youtube-processing-complete` or `youtube-processing-fail`.\n\n`e.detail` is set to the YouTube video id of the video.\n\n","tags":[{"tag":"event","type":null,"description":"youtube-upload-complete"},{"tag":"param","type":"Object","name":"e","description":"Event parameters."}],"orig":"*\n       * Fired when video upload has completed, and YouTube has begun processing the video.\n       *\n       * At this point, the video is not yet playable, and there is no guarantee that\n       * the server-side YouTube processing will succeed.\n       *\n       * One or more `youtube-processing-poll` events will then be fired after this event,\n       * followed by either a `youtube-processing-complete` or `youtube-processing-fail`.\n       *\n       * `e.detail` is set to the YouTube video id of the video.\n       *\n       * @event youtube-upload-complete\n       * @param {Object} e Event parameters.\n       "},"name":"youtube-upload-complete","params":[{"type":"Object","desc":"Event parameters.","name":"e"}]},{"desc":"\nFired when YouTube upload has failed.\n\nSince the actual upload failed, it's not possible for the YouTube server to attempt to\nprocess the video, and no `youtube-processing-poll` events will be fired.\n\n`e.detail` is set to a string explaining what went wrong.\n\n","jsdoc":{"description":"\nFired when YouTube upload has failed.\n\nSince the actual upload failed, it's not possible for the YouTube server to attempt to\nprocess the video, and no `youtube-processing-poll` events will be fired.\n\n`e.detail` is set to a string explaining what went wrong.\n\n","tags":[{"tag":"event","type":null,"description":"youtube-upload-fail"},{"tag":"param","type":"Object","name":"e","description":"Event parameters"}],"orig":"*\n       * Fired when YouTube upload has failed.\n       *\n       * Since the actual upload failed, it's not possible for the YouTube server to attempt to\n       * process the video, and no `youtube-processing-poll` events will be fired.\n       *\n       * `e.detail` is set to a string explaining what went wrong.\n       *\n       * @event youtube-upload-fail\n       * @param {Object} e Event parameters\n       "},"name":"youtube-upload-fail","params":[{"type":"Object","desc":"Event parameters","name":"e"}]},{"desc":"\nFired while the upload is in progress.\n\n`e.detail.progressEvent` is set to the corresponding\n[XMLHttpRequestProgressEvent](http://www.w3.org/TR/progress-events/).\n\n`e.detail.estimatedSecondsRemaining` is set to an estimate of the time remaining\nin the upload, based on the average upload speed so far.\n\n`e.detail.bytesPerSecond` is set to the average number of bytes sent per second\nsent so far.\n\n`e.fractionComplete` is set to the fraction of the upload that's complete, in the range [0, 1].\n\n","jsdoc":{"description":"\nFired while the upload is in progress.\n\n`e.detail.progressEvent` is set to the corresponding\n[XMLHttpRequestProgressEvent](http://www.w3.org/TR/progress-events/).\n\n`e.detail.estimatedSecondsRemaining` is set to an estimate of the time remaining\nin the upload, based on the average upload speed so far.\n\n`e.detail.bytesPerSecond` is set to the average number of bytes sent per second\nsent so far.\n\n`e.fractionComplete` is set to the fraction of the upload that's complete, in the range [0, 1].\n\n","tags":[{"tag":"event","type":null,"description":"youtube-upload-progress"},{"tag":"param","type":"Object","name":"e","description":"Event parameters."}],"orig":"*\n       * Fired while the upload is in progress.\n       *\n       * `e.detail.progressEvent` is set to the corresponding\n       * [XMLHttpRequestProgressEvent](http://www.w3.org/TR/progress-events/).\n       *\n       * `e.detail.estimatedSecondsRemaining` is set to an estimate of the time remaining\n       * in the upload, based on the average upload speed so far.\n       *\n       * `e.detail.bytesPerSecond` is set to the average number of bytes sent per second\n       * sent so far.\n       *\n       * `e.fractionComplete` is set to the fraction of the upload that's complete, in the range [0, 1].\n       *\n       * @event youtube-upload-progress\n       * @param {Object} e Event parameters.\n       "},"name":"youtube-upload-progress","params":[{"type":"Object","desc":"Event parameters.","name":"e"}]},{"desc":"\nFired when the upload begins.\n\n`e.detail` is set to the\n[file](https://developer.mozilla.org/en-US/docs/Web/API/File)\nbeing uploaded.\n\n","jsdoc":{"description":"\nFired when the upload begins.\n\n`e.detail` is set to the\n[file](https://developer.mozilla.org/en-US/docs/Web/API/File)\nbeing uploaded.\n\n","tags":[{"tag":"event","type":null,"description":"youtube-upload-start"},{"tag":"param","type":"Object","name":"e","description":"Event parameters."}],"orig":"*\n       * Fired when the upload begins.\n       *\n       * `e.detail` is set to the\n       * [file](https://developer.mozilla.org/en-US/docs/Web/API/File)\n       * being uploaded.\n       *\n       * @event youtube-upload-start\n       * @param {Object} e Event parameters.\n       "},"name":"youtube-upload-start","params":[{"type":"Object","desc":"Event parameters.","name":"e"}]}],"properties":[{"name":"authenticated","type":"Boolean","desc":"\nWhether the user has authenticated or not.\n\n","published":true,"default":false,"readOnly":true,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"authenticated"}]}},{"name":"auto","type":"Boolean","desc":"\nWhether files should be automatically uploaded.\n\n","published":true,"default":false,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"auto"}]}},{"name":"categoryId","type":"Number","desc":"\nThe numeric YouTube\n[cateogry id](https://developers.google.com/apis-explorer/#p/youtube/v3/youtube.videoCategories.list?part=snippet&regionCode=us).\n\n","published":true,"default":22,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"categoryId"}]}},{"name":"clientId","type":"String","desc":"\nAn OAuth 2 clientId reference, obtained from the\n[Google Developers Console](https://console.developers.google.com).\n\nFollow\n[the steps](https://developers.google.com/console/help/new/#generatingoauth2)\nfor registering for OAuth 2, ensure that the\n[YouTube Data API v3](https://developers.google.com/youtube/registering_an_application)\nis enabled for your API project, and ensure that the JavaScript Origin\nis set to the domain hosting the page on which\nyou'll be using this element.\n\n","published":true,"default":"","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"clientId"}]}},{"name":"description","type":"String","desc":"\nThe description for the new YouTube video.\n\n","published":true,"default":"Uploaded via a web component! Check out https://github.com/GoogleWebComponents/google-youtube-upload","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"description"}]}},{"name":"privacyStatus","type":"String","desc":"\nThe [privacy setting](https://support.google.com/youtube/answer/157177?hl=en)\nfor the new video.\n\nValid values are 'public', 'private', and 'unlisted'.\n\n","published":true,"default":"public","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"privacyStatus"}]}},{"name":"tags","type":"Array","desc":"\nThe array of tags for the new YouTube video.\n\n","published":true,"default":"[google-youtube-upload]","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"tags"}]}},{"name":"uploadFile","type":"Function","desc":"\nUploads a video file to YouTube.\n\n`this.accessToken` must already be set to a valid OAuth 2 access token.\n\n","params":[{"name":"file","type":"object","desc":"File object corresponding to the video to upload."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"uploadFile","description":null}]},"function":true},{"name":"videoId","type":"String","desc":"\nThe id of the new video.\n\nThis is set as soon as a `youtube-upload-complete` event is fired.\n\n","published":true,"default":"","readOnly":true,"notify":true,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"videoId"}]}},{"name":"videoTitle","type":"String","desc":"\nThe title for the new YouTube video.\n\n","published":true,"default":"Untitled Video","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"videoTitle"}]}},{"name":"_channel","type":"Object","published":true,"default":"","private":true},{"name":"_clientLoaded","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_computeChannelImageStyle","type":"Function","params":[{"name":"thumbnail"}],"private":true,"function":true,"default":""},{"name":"_computeUploadButtonStyle","type":"Function","params":[{"name":"auto"}],"private":true,"function":true,"default":""},{"name":"_computeUploadDivStyle","type":"Function","params":[{"name":"authenticated"}],"private":true,"function":true,"default":""},{"name":"_handleFileChanged","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_handleUploadClicked","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_loadChannels","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_pollForVideoStatus","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_selectedFile","type":"Object","published":true,"default":"","private":true},{"name":"_uploadStartTime","type":"number","private":true,"default":""},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true,"default":""}],"is":"google-youtube-upload","jsdoc":{"tags":[{"tag":"demo","type":null,"name":"","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}],"behaviors":[],"features":[],"elementsByTagName":{"google-youtube-upload":{"type":"element","desc":"\nElement enabling you to upload videos to YouTube.\n\n##### Examples\n\nManual upload with a `Video Upload` button once a video file is selected:\n\n    <google-youtube-upload client-id=\"...\"></google-youtube-upload>\n\nAutomatic upload on video file select, with a custom title, and 'unlisted' privacy:\n\n    <google-youtube-upload\n      auto\n      video-title=\"My Awesome Video\"\n      privacy-status=\"unlisted\"\n      client-id=\"...\">\n    </google-youtube-upload>\n\n","events":[{"desc":"\nFired when server-side processing is successful and the video is\navailable for playback on YouTube.\n\nThe video can be played at `https://youtu.be/VIDEO_ID` and can be\nembedded using the\n[`google-youtube`](https://github.com/GoogleWebComponents/google-youtube) element.\n\n`e.detail` is set to the YouTube video id of the video.\n\n","jsdoc":{"description":"\nFired when server-side processing is successful and the video is\navailable for playback on YouTube.\n\nThe video can be played at `https://youtu.be/VIDEO_ID` and can be\nembedded using the\n[`google-youtube`](https://github.com/GoogleWebComponents/google-youtube) element.\n\n`e.detail` is set to the YouTube video id of the video.\n\n","tags":[{"tag":"event","type":null,"description":"youtube-processing-complete"},{"tag":"param","type":"Object","name":"e","description":"Event parameters"}],"orig":"*\n       * Fired when server-side processing is successful and the video is\n       * available for playback on YouTube.\n       *\n       * The video can be played at `https://youtu.be/VIDEO_ID` and can be\n       * embedded using the\n       * [`google-youtube`](https://github.com/GoogleWebComponents/google-youtube) element.\n       *\n       * `e.detail` is set to the YouTube video id of the video.\n       *\n       * @event youtube-processing-complete\n       * @param {Object} e Event parameters\n       "},"name":"youtube-processing-complete","params":[{"type":"Object","desc":"Event parameters","name":"e"}]},{"desc":"\nFired when the video\n[failed transcoding](https://support.google.com/youtube/topic/2888603?hl=en&ref_topic=16547)\nand can't be played on YouTube.\n\n`e.detail` is set to a\n[status](https://developers.google.com/youtube/v3/docs/videos#status)\nobject which has more details about the failure.\n\n","jsdoc":{"description":"\nFired when the video\n[failed transcoding](https://support.google.com/youtube/topic/2888603?hl=en&ref_topic=16547)\nand can't be played on YouTube.\n\n`e.detail` is set to a\n[status](https://developers.google.com/youtube/v3/docs/videos#status)\nobject which has more details about the failure.\n\n","tags":[{"tag":"event","type":null,"description":"youtube-processing-fail"},{"tag":"param","type":"Object","name":"e","description":"Event parameters"}],"orig":"*\n       * Fired when the video\n       * [failed transcoding](https://support.google.com/youtube/topic/2888603?hl=en&ref_topic=16547)\n       * and can't be played on YouTube.\n       *\n       * `e.detail` is set to a\n       * [status](https://developers.google.com/youtube/v3/docs/videos#status)\n       * object which has more details about the failure.\n       *\n       * @event youtube-processing-fail\n       * @param {Object} e Event parameters\n       "},"name":"youtube-processing-fail","params":[{"type":"Object","desc":"Event parameters","name":"e"}]},{"desc":"\nFired while server-side processing is in progress.\n\nServer-side processing can take an\n[unpredictable amount of time](https://support.google.com/youtube/answer/71674?hl=en&ref_topic=2888603),\nand these events will be periodically fired each time the processing status is polled.\n\n`e.detail` is set to a\n[status](https://developers.google.com/youtube/v3/docs/videos#status)\nobject.\n\n","jsdoc":{"description":"\nFired while server-side processing is in progress.\n\nServer-side processing can take an\n[unpredictable amount of time](https://support.google.com/youtube/answer/71674?hl=en&ref_topic=2888603),\nand these events will be periodically fired each time the processing status is polled.\n\n`e.detail` is set to a\n[status](https://developers.google.com/youtube/v3/docs/videos#status)\nobject.\n\n","tags":[{"tag":"event","type":null,"description":"youtube-processing-poll"},{"tag":"param","type":"Object","name":"e","description":"Event parameters"}],"orig":"*\n       * Fired while server-side processing is in progress.\n       *\n       * Server-side processing can take an\n       * [unpredictable amount of time](https://support.google.com/youtube/answer/71674?hl=en&ref_topic=2888603),\n       * and these events will be periodically fired each time the processing status is polled.\n       *\n       * `e.detail` is set to a\n       * [status](https://developers.google.com/youtube/v3/docs/videos#status)\n       * object.\n       *\n       * @event youtube-processing-poll\n       * @param {Object} e Event parameters\n       "},"name":"youtube-processing-poll","params":[{"type":"Object","desc":"Event parameters","name":"e"}]},{"desc":"\nFired when video upload has completed, and YouTube has begun processing the video.\n\nAt this point, the video is not yet playable, and there is no guarantee that\nthe server-side YouTube processing will succeed.\n\nOne or more `youtube-processing-poll` events will then be fired after this event,\nfollowed by either a `youtube-processing-complete` or `youtube-processing-fail`.\n\n`e.detail` is set to the YouTube video id of the video.\n\n","jsdoc":{"description":"\nFired when video upload has completed, and YouTube has begun processing the video.\n\nAt this point, the video is not yet playable, and there is no guarantee that\nthe server-side YouTube processing will succeed.\n\nOne or more `youtube-processing-poll` events will then be fired after this event,\nfollowed by either a `youtube-processing-complete` or `youtube-processing-fail`.\n\n`e.detail` is set to the YouTube video id of the video.\n\n","tags":[{"tag":"event","type":null,"description":"youtube-upload-complete"},{"tag":"param","type":"Object","name":"e","description":"Event parameters."}],"orig":"*\n       * Fired when video upload has completed, and YouTube has begun processing the video.\n       *\n       * At this point, the video is not yet playable, and there is no guarantee that\n       * the server-side YouTube processing will succeed.\n       *\n       * One or more `youtube-processing-poll` events will then be fired after this event,\n       * followed by either a `youtube-processing-complete` or `youtube-processing-fail`.\n       *\n       * `e.detail` is set to the YouTube video id of the video.\n       *\n       * @event youtube-upload-complete\n       * @param {Object} e Event parameters.\n       "},"name":"youtube-upload-complete","params":[{"type":"Object","desc":"Event parameters.","name":"e"}]},{"desc":"\nFired when YouTube upload has failed.\n\nSince the actual upload failed, it's not possible for the YouTube server to attempt to\nprocess the video, and no `youtube-processing-poll` events will be fired.\n\n`e.detail` is set to a string explaining what went wrong.\n\n","jsdoc":{"description":"\nFired when YouTube upload has failed.\n\nSince the actual upload failed, it's not possible for the YouTube server to attempt to\nprocess the video, and no `youtube-processing-poll` events will be fired.\n\n`e.detail` is set to a string explaining what went wrong.\n\n","tags":[{"tag":"event","type":null,"description":"youtube-upload-fail"},{"tag":"param","type":"Object","name":"e","description":"Event parameters"}],"orig":"*\n       * Fired when YouTube upload has failed.\n       *\n       * Since the actual upload failed, it's not possible for the YouTube server to attempt to\n       * process the video, and no `youtube-processing-poll` events will be fired.\n       *\n       * `e.detail` is set to a string explaining what went wrong.\n       *\n       * @event youtube-upload-fail\n       * @param {Object} e Event parameters\n       "},"name":"youtube-upload-fail","params":[{"type":"Object","desc":"Event parameters","name":"e"}]},{"desc":"\nFired while the upload is in progress.\n\n`e.detail.progressEvent` is set to the corresponding\n[XMLHttpRequestProgressEvent](http://www.w3.org/TR/progress-events/).\n\n`e.detail.estimatedSecondsRemaining` is set to an estimate of the time remaining\nin the upload, based on the average upload speed so far.\n\n`e.detail.bytesPerSecond` is set to the average number of bytes sent per second\nsent so far.\n\n`e.fractionComplete` is set to the fraction of the upload that's complete, in the range [0, 1].\n\n","jsdoc":{"description":"\nFired while the upload is in progress.\n\n`e.detail.progressEvent` is set to the corresponding\n[XMLHttpRequestProgressEvent](http://www.w3.org/TR/progress-events/).\n\n`e.detail.estimatedSecondsRemaining` is set to an estimate of the time remaining\nin the upload, based on the average upload speed so far.\n\n`e.detail.bytesPerSecond` is set to the average number of bytes sent per second\nsent so far.\n\n`e.fractionComplete` is set to the fraction of the upload that's complete, in the range [0, 1].\n\n","tags":[{"tag":"event","type":null,"description":"youtube-upload-progress"},{"tag":"param","type":"Object","name":"e","description":"Event parameters."}],"orig":"*\n       * Fired while the upload is in progress.\n       *\n       * `e.detail.progressEvent` is set to the corresponding\n       * [XMLHttpRequestProgressEvent](http://www.w3.org/TR/progress-events/).\n       *\n       * `e.detail.estimatedSecondsRemaining` is set to an estimate of the time remaining\n       * in the upload, based on the average upload speed so far.\n       *\n       * `e.detail.bytesPerSecond` is set to the average number of bytes sent per second\n       * sent so far.\n       *\n       * `e.fractionComplete` is set to the fraction of the upload that's complete, in the range [0, 1].\n       *\n       * @event youtube-upload-progress\n       * @param {Object} e Event parameters.\n       "},"name":"youtube-upload-progress","params":[{"type":"Object","desc":"Event parameters.","name":"e"}]},{"desc":"\nFired when the upload begins.\n\n`e.detail` is set to the\n[file](https://developer.mozilla.org/en-US/docs/Web/API/File)\nbeing uploaded.\n\n","jsdoc":{"description":"\nFired when the upload begins.\n\n`e.detail` is set to the\n[file](https://developer.mozilla.org/en-US/docs/Web/API/File)\nbeing uploaded.\n\n","tags":[{"tag":"event","type":null,"description":"youtube-upload-start"},{"tag":"param","type":"Object","name":"e","description":"Event parameters."}],"orig":"*\n       * Fired when the upload begins.\n       *\n       * `e.detail` is set to the\n       * [file](https://developer.mozilla.org/en-US/docs/Web/API/File)\n       * being uploaded.\n       *\n       * @event youtube-upload-start\n       * @param {Object} e Event parameters.\n       "},"name":"youtube-upload-start","params":[{"type":"Object","desc":"Event parameters.","name":"e"}]}],"properties":[{"name":"authenticated","type":"Boolean","desc":"\nWhether the user has authenticated or not.\n\n","published":true,"default":false,"readOnly":true,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"authenticated"}]}},{"name":"auto","type":"Boolean","desc":"\nWhether files should be automatically uploaded.\n\n","published":true,"default":false,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"auto"}]}},{"name":"categoryId","type":"Number","desc":"\nThe numeric YouTube\n[cateogry id](https://developers.google.com/apis-explorer/#p/youtube/v3/youtube.videoCategories.list?part=snippet&regionCode=us).\n\n","published":true,"default":22,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"categoryId"}]}},{"name":"clientId","type":"String","desc":"\nAn OAuth 2 clientId reference, obtained from the\n[Google Developers Console](https://console.developers.google.com).\n\nFollow\n[the steps](https://developers.google.com/console/help/new/#generatingoauth2)\nfor registering for OAuth 2, ensure that the\n[YouTube Data API v3](https://developers.google.com/youtube/registering_an_application)\nis enabled for your API project, and ensure that the JavaScript Origin\nis set to the domain hosting the page on which\nyou'll be using this element.\n\n","published":true,"default":"","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"clientId"}]}},{"name":"description","type":"String","desc":"\nThe description for the new YouTube video.\n\n","published":true,"default":"Uploaded via a web component! Check out https://github.com/GoogleWebComponents/google-youtube-upload","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"description"}]}},{"name":"privacyStatus","type":"String","desc":"\nThe [privacy setting](https://support.google.com/youtube/answer/157177?hl=en)\nfor the new video.\n\nValid values are 'public', 'private', and 'unlisted'.\n\n","published":true,"default":"public","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"privacyStatus"}]}},{"name":"tags","type":"Array","desc":"\nThe array of tags for the new YouTube video.\n\n","published":true,"default":"[google-youtube-upload]","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"tags"}]}},{"name":"uploadFile","type":"Function","desc":"\nUploads a video file to YouTube.\n\n`this.accessToken` must already be set to a valid OAuth 2 access token.\n\n","params":[{"name":"file","type":"object","desc":"File object corresponding to the video to upload."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"uploadFile","description":null}]},"function":true},{"name":"videoId","type":"String","desc":"\nThe id of the new video.\n\nThis is set as soon as a `youtube-upload-complete` event is fired.\n\n","published":true,"default":"","readOnly":true,"notify":true,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"videoId"}]}},{"name":"videoTitle","type":"String","desc":"\nThe title for the new YouTube video.\n\n","published":true,"default":"Untitled Video","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"videoTitle"}]}},{"name":"_channel","type":"Object","published":true,"default":"","private":true},{"name":"_clientLoaded","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_computeChannelImageStyle","type":"Function","params":[{"name":"thumbnail"}],"private":true,"function":true,"default":""},{"name":"_computeUploadButtonStyle","type":"Function","params":[{"name":"auto"}],"private":true,"function":true,"default":""},{"name":"_computeUploadDivStyle","type":"Function","params":[{"name":"authenticated"}],"private":true,"function":true,"default":""},{"name":"_handleFileChanged","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_handleUploadClicked","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_loadChannels","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_pollForVideoStatus","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_selectedFile","type":"Object","published":true,"default":"","private":true},{"name":"_uploadStartTime","type":"number","private":true,"default":""},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true,"default":""}],"is":"google-youtube-upload","jsdoc":{"tags":[{"tag":"demo","type":null,"name":"","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}}}