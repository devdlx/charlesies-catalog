{"elements":[{"type":"element","desc":"\nElement access to Web Storage API (window.localStorage).\n\nKeeps `value` property in sync with localStorage.\n\nValue is saved as json by default.\n\n###Usage:\n\n`ls-sample` will automatically save changes to its value.\n\n    <dom-module id=\"ls-sample\">\n      <iron-localstorage name=\"my-app-storage\"\n        value=\"{{cartoon}}\"\n        on-iron-localstorage-load-empty=\"initializeDefaultCartoon\"\n      ></iron-localstorage>\n    </dom-module>\n\n    <script>\n      Polymer({\n        is: 'ls-sample',\n        properties: {\n          cartoon: {\n            type: Object\n          }\n        },\n        // initializes default if nothing has been stored\n        initializeDefaultCartoon: function() {\n          this.cartoon = {\n            name: \"Mickey\",\n            hasEars: true\n          }\n        },\n        // use path set api to propagate changes to localstorage\n        makeModifications: function() {\n          this.set('cartoon.name', \"Minions\");\n          this.set('cartoon.hasEars', false);\n        }\n      });\n    </script>\n\n###Tech notes:\n\n* `value.*` is observed, and saved on modifications. You must use\nproperty notification methods to modify value for changes to be observed.\n\n* Set `auto-save-disabled` to prevent automatic saving.\n\n* Value is saved as JSON by default.\n\n* To delete a key, set value to null\n\nElement listens to StorageAPI `storage` event, and will reload upon receiving it.\n\n**Warning**: do not bind value to sub-properties until Polymer\n[bug 1550](https://github.com/Polymer/polymer/issues/1550)\nis resolved. Local storage will be blown away.\n`<iron-localstorage value=\"{{foo.bar}}\"` will cause **data loss**.\n\n","events":[{"desc":"\nFired when value loads from localStorage.\n\n","jsdoc":{"description":"\nFired when value loads from localStorage.\n\n","tags":[{"tag":"event","type":null,"description":"iron-localstorage-load"},{"tag":"param","type":"{externalChange: boolean}","name":"detail","description":"    externalChange: true if change occured in different window."}],"orig":"*\n     * Fired when value loads from localStorage.\n     *\n     * @event iron-localstorage-load\n     * @param {{externalChange:boolean}} detail -\n     *     externalChange: true if change occured in different window.\n     "},"name":"iron-localstorage-load","params":[{"type":"{externalChange: boolean}","desc":"    externalChange: true if change occured in different window.","name":"detail"}]},{"desc":"\nFired when loaded value does not exist.\nEvent handler can be used to initialize default value.\n\n","jsdoc":{"description":"\nFired when loaded value does not exist.\nEvent handler can be used to initialize default value.\n\n","tags":[{"tag":"event","type":null,"description":"iron-localstorage-load-empty"},{"tag":"param","type":"{externalChange: boolean}","name":"detail","description":"    externalChange: true if change occured in different window."}],"orig":"*\n     * Fired when loaded value does not exist.\n     * Event handler can be used to initialize default value.\n     *\n     * @event iron-localstorage-load-empty\n     * @param {{externalChange:boolean}} detail -\n     *     externalChange: true if change occured in different window.\n     "},"name":"iron-localstorage-load-empty","params":[{"type":"{externalChange: boolean}","desc":"    externalChange: true if change occured in different window.","name":"detail"}]}],"properties":[{"name":"autoSaveDisabled","type":"Boolean","desc":"\nValue will not be saved automatically if true. You'll have to do it manually with `save()`\n       ","published":true,"default":false},{"name":"errorMessage","type":"String","desc":"\nLast error encountered while saving/loading items\n       ","published":true,"notify":true},{"name":"name","type":"String","desc":"\nlocalStorage item key\n       ","published":true,"default":""},{"name":"reload","type":"Function","desc":"\nLoads the value again. Use if you modify\nlocalStorage using DOM calls, and want to\nkeep this element in sync.\n     ","params":[],"function":true},{"name":"save","type":"Function","desc":"\nSaves the value to localStorage. Call to save if autoSaveDisabled is set.\nIf `value` is null, deletes localStorage.\n     ","params":[],"function":true},{"name":"useRaw","type":"Boolean","desc":"\nIf true: do not convert value to JSON on save/load\n       ","published":true,"default":false},{"name":"value","type":"*","desc":"\nThe data associated with this storage.\nIf set to null item will be deleted.\n","published":true,"notify":true},{"name":"_debounceReload","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_handleStorage","type":"Function","params":[{"name":"ev"}],"private":true,"function":true,"default":""},{"name":"_load","type":"Function","desc":"\nloads value from local storage\n","params":[{"name":"externalChange","type":"boolean=","desc":"true if loading changes from a different window"}],"private":true,"function":true},{"name":"_loaded","type":"Boolean","desc":"True if value has been loaded ","published":true,"default":false,"private":true},{"name":"_trySaveValue","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true,"default":""},{"name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true,"default":""},{"name":"observers","type":"Array","private":true,"configuration":true,"default":""},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true,"default":""}],"is":"iron-localstorage","jsdoc":{"tags":[{"tag":"demo","type":null,"name":"demo/index.html","description":""},{"tag":"hero","type":null,"name":"hero.svg","description":null}]},"demos":[{"desc":"demo","path":"demo/index.html"}],"hero":"hero.svg"}],"behaviors":[],"features":[],"elementsByTagName":{"iron-localstorage":{"type":"element","desc":"\nElement access to Web Storage API (window.localStorage).\n\nKeeps `value` property in sync with localStorage.\n\nValue is saved as json by default.\n\n###Usage:\n\n`ls-sample` will automatically save changes to its value.\n\n    <dom-module id=\"ls-sample\">\n      <iron-localstorage name=\"my-app-storage\"\n        value=\"{{cartoon}}\"\n        on-iron-localstorage-load-empty=\"initializeDefaultCartoon\"\n      ></iron-localstorage>\n    </dom-module>\n\n    <script>\n      Polymer({\n        is: 'ls-sample',\n        properties: {\n          cartoon: {\n            type: Object\n          }\n        },\n        // initializes default if nothing has been stored\n        initializeDefaultCartoon: function() {\n          this.cartoon = {\n            name: \"Mickey\",\n            hasEars: true\n          }\n        },\n        // use path set api to propagate changes to localstorage\n        makeModifications: function() {\n          this.set('cartoon.name', \"Minions\");\n          this.set('cartoon.hasEars', false);\n        }\n      });\n    </script>\n\n###Tech notes:\n\n* `value.*` is observed, and saved on modifications. You must use\nproperty notification methods to modify value for changes to be observed.\n\n* Set `auto-save-disabled` to prevent automatic saving.\n\n* Value is saved as JSON by default.\n\n* To delete a key, set value to null\n\nElement listens to StorageAPI `storage` event, and will reload upon receiving it.\n\n**Warning**: do not bind value to sub-properties until Polymer\n[bug 1550](https://github.com/Polymer/polymer/issues/1550)\nis resolved. Local storage will be blown away.\n`<iron-localstorage value=\"{{foo.bar}}\"` will cause **data loss**.\n\n","events":[{"desc":"\nFired when value loads from localStorage.\n\n","jsdoc":{"description":"\nFired when value loads from localStorage.\n\n","tags":[{"tag":"event","type":null,"description":"iron-localstorage-load"},{"tag":"param","type":"{externalChange: boolean}","name":"detail","description":"    externalChange: true if change occured in different window."}],"orig":"*\n     * Fired when value loads from localStorage.\n     *\n     * @event iron-localstorage-load\n     * @param {{externalChange:boolean}} detail -\n     *     externalChange: true if change occured in different window.\n     "},"name":"iron-localstorage-load","params":[{"type":"{externalChange: boolean}","desc":"    externalChange: true if change occured in different window.","name":"detail"}]},{"desc":"\nFired when loaded value does not exist.\nEvent handler can be used to initialize default value.\n\n","jsdoc":{"description":"\nFired when loaded value does not exist.\nEvent handler can be used to initialize default value.\n\n","tags":[{"tag":"event","type":null,"description":"iron-localstorage-load-empty"},{"tag":"param","type":"{externalChange: boolean}","name":"detail","description":"    externalChange: true if change occured in different window."}],"orig":"*\n     * Fired when loaded value does not exist.\n     * Event handler can be used to initialize default value.\n     *\n     * @event iron-localstorage-load-empty\n     * @param {{externalChange:boolean}} detail -\n     *     externalChange: true if change occured in different window.\n     "},"name":"iron-localstorage-load-empty","params":[{"type":"{externalChange: boolean}","desc":"    externalChange: true if change occured in different window.","name":"detail"}]}],"properties":[{"name":"autoSaveDisabled","type":"Boolean","desc":"\nValue will not be saved automatically if true. You'll have to do it manually with `save()`\n       ","published":true,"default":false},{"name":"errorMessage","type":"String","desc":"\nLast error encountered while saving/loading items\n       ","published":true,"notify":true},{"name":"name","type":"String","desc":"\nlocalStorage item key\n       ","published":true,"default":""},{"name":"reload","type":"Function","desc":"\nLoads the value again. Use if you modify\nlocalStorage using DOM calls, and want to\nkeep this element in sync.\n     ","params":[],"function":true},{"name":"save","type":"Function","desc":"\nSaves the value to localStorage. Call to save if autoSaveDisabled is set.\nIf `value` is null, deletes localStorage.\n     ","params":[],"function":true},{"name":"useRaw","type":"Boolean","desc":"\nIf true: do not convert value to JSON on save/load\n       ","published":true,"default":false},{"name":"value","type":"*","desc":"\nThe data associated with this storage.\nIf set to null item will be deleted.\n","published":true,"notify":true},{"name":"_debounceReload","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_handleStorage","type":"Function","params":[{"name":"ev"}],"private":true,"function":true,"default":""},{"name":"_load","type":"Function","desc":"\nloads value from local storage\n","params":[{"name":"externalChange","type":"boolean=","desc":"true if loading changes from a different window"}],"private":true,"function":true},{"name":"_loaded","type":"Boolean","desc":"True if value has been loaded ","published":true,"default":false,"private":true},{"name":"_trySaveValue","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true,"default":""},{"name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true,"default":""},{"name":"observers","type":"Array","private":true,"configuration":true,"default":""},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true,"default":""}],"is":"iron-localstorage","jsdoc":{"tags":[{"tag":"demo","type":null,"name":"demo/index.html","description":""},{"tag":"hero","type":null,"name":"hero.svg","description":null}]},"demos":[{"desc":"demo","path":"demo/index.html"}],"hero":"hero.svg"}}}