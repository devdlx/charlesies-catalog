{"elements":[{"type":"element","desc":"\n`google-youtube` encapsulates the YouTube player into a web component.\n\n    <google-youtube\n      video-id=\"...\"\n      height=\"270px\"\n      width=\"480px\"\n      rel=\"0\"\n      start=\"5\"\n      autoplay=\"1\">\n    </google-youtube>\n\n`google-youtube` supports all of the [embedded player parameters](https://developers.google.com/youtube/player_parameters). Each can be set as an attribute on `google-youtube`.\n\nThe standard set of [YouTube player events](https://developers.google.com/youtube/iframe_api_reference#Events) are exposed, as well as methods for playing, pausing, seeking to a specific time, and loading a new video.\n\n","events":[{"desc":"\nFired when playback fails due to an error. `e.detail.data` is set to one of\n[the documented](https://developers.google.com/youtube/iframe_api_reference#onError)\nerror codes.\n\n","jsdoc":{"description":"\nFired when playback fails due to an error. `e.detail.data` is set to one of\n[the documented](https://developers.google.com/youtube/iframe_api_reference#onError)\nerror codes.\n\n","tags":[{"tag":"event","type":null,"description":"google-youtube-error"},{"tag":"param","type":"Object","name":"e","description":"Event parameters."}],"orig":"*\n     * Fired when playback fails due to an error. `e.detail.data` is set to one of\n     * [the documented](https://developers.google.com/youtube/iframe_api_reference#onError)\n     * error codes.\n     *\n     * @event google-youtube-error\n     * @param {Object} e Event parameters.\n     "},"name":"google-youtube-error","params":[{"type":"Object","desc":"Event parameters.","name":"e"}]},{"desc":"\nFired when the YouTube player is fully initialized and ready for use.\n\n","jsdoc":{"description":"\nFired when the YouTube player is fully initialized and ready for use.\n\n","tags":[{"tag":"event","type":null,"description":"google-youtube-ready"}],"orig":"*\n     * Fired when the YouTube player is fully initialized and ready for use.\n     *\n     * @event google-youtube-ready\n     "},"name":"google-youtube-ready","params":[]},{"desc":"\nFired when the state of the player changes. `e.detail.data` is set to one of\n[the documented](https://developers.google.com/youtube/iframe_api_reference#onStateChange)\nstates.\n\n","jsdoc":{"description":"\nFired when the state of the player changes. `e.detail.data` is set to one of\n[the documented](https://developers.google.com/youtube/iframe_api_reference#onStateChange)\nstates.\n\n","tags":[{"tag":"event","type":null,"description":"google-youtube-state-change"},{"tag":"param","type":"Object","name":"e","description":"Event parameters."}],"orig":"*\n     * Fired when the state of the player changes. `e.detail.data` is set to one of\n     * [the documented](https://developers.google.com/youtube/iframe_api_reference#onStateChange)\n     * states.\n     *\n     * @event google-youtube-state-change\n     * @param {Object} e Event parameters.\n     "},"name":"google-youtube-state-change","params":[{"type":"Object","desc":"Event parameters.","name":"e"}]}],"properties":[{"name":"autoplay","type":"Number","desc":"\n\"1\" if video should start automatically\n       ","published":true,"default":0},{"name":"chromeless","type":"Boolean","desc":"\nA shorthand to enable a set of player attributes that, used together, simulate a \"chromeless\" YouTube player.\n\nEquivalent to setting the following attributes:\n- `controls=\"0\"`\n- `modestbranding=\"1\"`\n- `showinfo=\"0\"`\n- `iv_load_policy=\"3\"`\n- `rel=\"0\"`\n\nThe \"chromeless\" player has minimal YouTube branding in cued state, and the native controls\nwill be disabled during playback. Creating your own custom play/pause/etc. controls is recommended.\n       ","published":true,"default":false},{"name":"currenttime","type":"Number","desc":"\nExposes the current playback time, in seconds.\n\nYou can divide this value by the `duration` to determine the playback percentage.\n       ","published":true,"default":0,"notify":true},{"name":"currenttimeformatted","type":"String","desc":"\nExposes the current playback time, formatted as a (HH:)MM:SS string.\n       ","published":true,"default":"0:00","notify":true},{"name":"duration","type":"Number","desc":"\nExposes the video duration, in seconds.\n\nYou can divide the `currenttime` to determine the playback percentage.\n\n","published":true,"default":1,"notify":true,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"duration"}]}},{"name":"durationformatted","type":"String","desc":"\nExposes the video duration, formatted as a (HH:)MM:SS string.\n       ","published":true,"default":"0:00","notify":true},{"name":"fluid","type":"Boolean","desc":"\nIf `fluid` is set, then the player will set its width to 100% to fill\nthe parent container, while adding `padding-top` to preserve the\naspect ratio provided by `width` and `height`. If `width` and `height`\nhave not been set, the player will fall back to a 16:9 aspect ratio.\nThis is useful for responsive designs where you don't want to\nintroduce letterboxing on your video.\n       ","published":true,"default":false},{"name":"fractionloaded","type":"Number","desc":"\nThe fraction of the bytes that have been loaded for the current video, in the range [0-1].\n       ","published":true,"default":0,"notify":true},{"name":"height","type":"String","desc":"\nSets the height of the player on the page.\nAccepts anything valid for a CSS measurement, e.g. '200px' or '50%'.\nIf the unit of measurement is left off, 'px' is assumed.\n       ","published":true,"default":"270px"},{"name":"mute","type":"Function","desc":"\nMutes the current video.\n\nDevelopers should take care not to break expected user experience by programmatically\nmodifying the volume on mobile browsers.\nNote that the YouTube player, in addition, does not display volume controls in a\nmobile environment.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"mute","description":null}]},"function":true},{"name":"pause","type":"Function","desc":"\nPauses the current video.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"pause","description":null}]},"function":true},{"name":"play","type":"Function","desc":"\nPlays the current video.\n\nNote that on certain mobile browsers, playback\n[can't be initiated programmatically](https://developers.google.com/youtube/iframe_api_reference#Mobile_considerations).\n\nIf `this.playsupported` is not `true`, calling `play()` will have no effect.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"play","description":null}]},"function":true},{"name":"playbackstarted","type":"Boolean","desc":"\nWhether playback has started.\n\nThis defaults to `false` and is set to `true` once the first 'playing' event is fired by\nthe underlying YouTube Player API.\n\nOnce set to `true`, it will remain that way indefinitely.\nPaused/buffering/ended events won't cause `playbackstarted` to reset to `false`.\nNor will loading a new video into the player.\n       ","published":true,"default":false,"notify":true},{"name":"playsupported","type":"Boolean","desc":"\nWhether programmatic `<video>.play()` for initial playback is supported in the current browser.\n\nMost mobile browsers [do not support](https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html#//apple_ref/doc/uid/TP40009523-CH5-SW1) autoplaying or scripted playback of videos.\nIf you attempt to automatically initiate playback of a `<google-youtube>`, e.g. by calling the `play()` method before\nplayback has initially begun, the YouTube Player will enter an unrecoverable \"stuck\" state.\nTo protect against this, check the value of `playsupported` and don't call `play()` if it is set to `false`.\n(You can hide/disable your custom play button, etc.)\n\nThe `playsupported` value is determined at runtime, by dynamically creating a `<video>` element with an\ninlined data source and calling `play()` on it. (Inspired by [Modernizr](https://github.com/Modernizr/Modernizr/blob/master/feature-detects/video/autoplay.js).)\n\nIf you would rather not incur the minimal overhead involved in going through this process, you can explicitly set\n`playsupported` to `true` or `false` when initializing `<google-youtube>`. This is only recommended if you know that\nyour web app will never (or only) be used on mobile browsers.\n       ","published":true,"default":null,"notify":true},{"name":"seekTo","type":"Function","desc":"\nSkips ahead (or back) to the specified number of seconds.\n\n","params":[{"name":"seconds","type":"number","desc":"Number of seconds to seek to."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"seekTo","description":null}]},"function":true},{"name":"setVolume","type":"Function","desc":"\nModifies the volume of the current video.\n\nDevelopers should take care not to break expected user experience by programmatically\nmodifying the volume on mobile browsers.\nNote that the YouTube player, in addition, does not display volume controls in a\nmobile environment.\n\n","params":[{"name":"volume","type":"number","desc":"The new volume, an integer between 0 (muted) and 100 (loudest)."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"setVolume","description":null}]},"function":true},{"name":"state","type":"Number","desc":"\nExposes the current player state.\nUsing this attribute is an alternative to listening to `google-youtube-state-change` events,\nand can simplify the logic in templates with conditional binding.\n\nThe [possible values](https://developers.google.com/youtube/iframe_api_reference#onStateChange):\n  - -1 (unstarted)\n  - 0 (ended)\n  - 1 (playing)\n  - 2 (paused)\n  - 3 (buffering)\n  - 5 (video cued)\n       ","published":true,"default":"-1","notify":true},{"name":"thumbnail","type":"String","desc":"\nThe URL of an image to use as a custom thumbnail.\n\nThis is optional; if not provided, the standard YouTube embed (which uses the thumbnail associated\nwith the video on YouTube) will be used.\n\nIf `thumbnail` is set, than an `<img>` containing the thumbnail will be used in lieu of the actual\nYouTube embed. When the thumbnail is clicked, the `<img>` is swapped out for the actual YouTube embed,\nwhich will have [`autoplay=1`](https://developers.google.com/youtube/player_parameters#autoplay) set by default (in additional to any other player parameters specified on this element).\n\nPlease note that `autoplay=1` won't actually autoplay videos on mobile browsers, so two taps will be required\nto play the video there. Also, on desktop browsers, setting `autoplay=1` will prevent the playback\nfrom [incrementing the view count](https://support.google.com/youtube/answer/1714329) for the video.\n       ","published":true,"default":""},{"name":"unMute","type":"Function","desc":"\nUnmutes the current video.\n\nDevelopers should take care not to break expected user experience by programmatically\nmodifying the volume on mobile browsers.\nNote that the YouTube player, in addition, does not display volume controls in a\nmobile environment.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"unMute","description":null}]},"function":true},{"name":"videoId","type":"String","desc":"\nSets the id of the video to play. Changing this attribute will trigger a call\nto load a new video into the player (if `this.autoplay` is set to `1` and `playsupported` is true)\nor cue a new video otherwise.\n\nYou can [search for videos programmatically](https://developers.google.com/youtube/v3/docs/search/list)\nusing the YouTube Data API, or just hardcode known video ids to display on your page.\n     ","published":true,"default":"mN7IAaRdi_k"},{"name":"width","type":"String","desc":"\nSets the width of the player on the page.\nAccepts anything valid for a CSS measurement, e.g. '200px' or '50%'.\nIf the unit of measurement is left off, 'px' is assumed.\n       ","published":true,"default":"480px"},{"name":"__updatePlaybackStatsInterval","type":"object","private":true,"default":""},{"name":"_apiLoad","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_computeContainerStyle","type":"Function","params":[{"name":"width"},{"name":"height"}],"private":true,"function":true,"default":""},{"name":"_determinePlaySupported","type":"Function","desc":"\nDetects whether programmatic <video>.play() is supported in the current browser.\n\nThis is triggered via on-ironlocalstorage-load. The logic is:\n- If playsupported is explicitly set to true or false on the element, use that.\n- Otherwise, if there's a cached value in localStorage, use that.\n- Otherwise, create a hidden <video> element and call play() on it:\n  - If playback starts, playsupported is true.\n  - If playback doesn't start (within 500ms), playsupported is false.\n  - Whatever happens, cache the result in localStorage.\n     ","params":[],"private":true,"function":true},{"name":"_handleThumbnailTap","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_pendingVideoId","type":"string","private":true,"default":""},{"name":"_player","type":"object","private":true,"default":""},{"name":"_toHHMMSS","type":"Function","params":[{"name":"totalSeconds"}],"private":true,"function":true,"default":""},{"name":"_updatePlaybackStats","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_videoIdChanged","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"detached","type":"Function","desc":"\nClean up the underlying Player `<iframe>` when we're removed from the DOM.\n     ","params":[],"private":true,"configuration":true,"function":true},{"name":"ready","type":"Function","desc":"\nSets fluid width/height.\n\nIf the fluid attribute is set, the aspect ratio of the video will\nbe inferred (if set in pixels), or assumed to be 16:9. The element\nwill give itself enough top padding to force the player to use the\ncorrect aspect ratio, even as the screen size changes.\n\n     ","params":[],"private":true,"configuration":true,"function":true}],"is":"google-youtube","jsdoc":{"tags":[{"tag":"demo","type":null,"name":"","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}],"behaviors":[],"features":[],"elementsByTagName":{"google-youtube":{"type":"element","desc":"\n`google-youtube` encapsulates the YouTube player into a web component.\n\n    <google-youtube\n      video-id=\"...\"\n      height=\"270px\"\n      width=\"480px\"\n      rel=\"0\"\n      start=\"5\"\n      autoplay=\"1\">\n    </google-youtube>\n\n`google-youtube` supports all of the [embedded player parameters](https://developers.google.com/youtube/player_parameters). Each can be set as an attribute on `google-youtube`.\n\nThe standard set of [YouTube player events](https://developers.google.com/youtube/iframe_api_reference#Events) are exposed, as well as methods for playing, pausing, seeking to a specific time, and loading a new video.\n\n","events":[{"desc":"\nFired when playback fails due to an error. `e.detail.data` is set to one of\n[the documented](https://developers.google.com/youtube/iframe_api_reference#onError)\nerror codes.\n\n","jsdoc":{"description":"\nFired when playback fails due to an error. `e.detail.data` is set to one of\n[the documented](https://developers.google.com/youtube/iframe_api_reference#onError)\nerror codes.\n\n","tags":[{"tag":"event","type":null,"description":"google-youtube-error"},{"tag":"param","type":"Object","name":"e","description":"Event parameters."}],"orig":"*\n     * Fired when playback fails due to an error. `e.detail.data` is set to one of\n     * [the documented](https://developers.google.com/youtube/iframe_api_reference#onError)\n     * error codes.\n     *\n     * @event google-youtube-error\n     * @param {Object} e Event parameters.\n     "},"name":"google-youtube-error","params":[{"type":"Object","desc":"Event parameters.","name":"e"}]},{"desc":"\nFired when the YouTube player is fully initialized and ready for use.\n\n","jsdoc":{"description":"\nFired when the YouTube player is fully initialized and ready for use.\n\n","tags":[{"tag":"event","type":null,"description":"google-youtube-ready"}],"orig":"*\n     * Fired when the YouTube player is fully initialized and ready for use.\n     *\n     * @event google-youtube-ready\n     "},"name":"google-youtube-ready","params":[]},{"desc":"\nFired when the state of the player changes. `e.detail.data` is set to one of\n[the documented](https://developers.google.com/youtube/iframe_api_reference#onStateChange)\nstates.\n\n","jsdoc":{"description":"\nFired when the state of the player changes. `e.detail.data` is set to one of\n[the documented](https://developers.google.com/youtube/iframe_api_reference#onStateChange)\nstates.\n\n","tags":[{"tag":"event","type":null,"description":"google-youtube-state-change"},{"tag":"param","type":"Object","name":"e","description":"Event parameters."}],"orig":"*\n     * Fired when the state of the player changes. `e.detail.data` is set to one of\n     * [the documented](https://developers.google.com/youtube/iframe_api_reference#onStateChange)\n     * states.\n     *\n     * @event google-youtube-state-change\n     * @param {Object} e Event parameters.\n     "},"name":"google-youtube-state-change","params":[{"type":"Object","desc":"Event parameters.","name":"e"}]}],"properties":[{"name":"autoplay","type":"Number","desc":"\n\"1\" if video should start automatically\n       ","published":true,"default":0},{"name":"chromeless","type":"Boolean","desc":"\nA shorthand to enable a set of player attributes that, used together, simulate a \"chromeless\" YouTube player.\n\nEquivalent to setting the following attributes:\n- `controls=\"0\"`\n- `modestbranding=\"1\"`\n- `showinfo=\"0\"`\n- `iv_load_policy=\"3\"`\n- `rel=\"0\"`\n\nThe \"chromeless\" player has minimal YouTube branding in cued state, and the native controls\nwill be disabled during playback. Creating your own custom play/pause/etc. controls is recommended.\n       ","published":true,"default":false},{"name":"currenttime","type":"Number","desc":"\nExposes the current playback time, in seconds.\n\nYou can divide this value by the `duration` to determine the playback percentage.\n       ","published":true,"default":0,"notify":true},{"name":"currenttimeformatted","type":"String","desc":"\nExposes the current playback time, formatted as a (HH:)MM:SS string.\n       ","published":true,"default":"0:00","notify":true},{"name":"duration","type":"Number","desc":"\nExposes the video duration, in seconds.\n\nYou can divide the `currenttime` to determine the playback percentage.\n\n","published":true,"default":1,"notify":true,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"duration"}]}},{"name":"durationformatted","type":"String","desc":"\nExposes the video duration, formatted as a (HH:)MM:SS string.\n       ","published":true,"default":"0:00","notify":true},{"name":"fluid","type":"Boolean","desc":"\nIf `fluid` is set, then the player will set its width to 100% to fill\nthe parent container, while adding `padding-top` to preserve the\naspect ratio provided by `width` and `height`. If `width` and `height`\nhave not been set, the player will fall back to a 16:9 aspect ratio.\nThis is useful for responsive designs where you don't want to\nintroduce letterboxing on your video.\n       ","published":true,"default":false},{"name":"fractionloaded","type":"Number","desc":"\nThe fraction of the bytes that have been loaded for the current video, in the range [0-1].\n       ","published":true,"default":0,"notify":true},{"name":"height","type":"String","desc":"\nSets the height of the player on the page.\nAccepts anything valid for a CSS measurement, e.g. '200px' or '50%'.\nIf the unit of measurement is left off, 'px' is assumed.\n       ","published":true,"default":"270px"},{"name":"mute","type":"Function","desc":"\nMutes the current video.\n\nDevelopers should take care not to break expected user experience by programmatically\nmodifying the volume on mobile browsers.\nNote that the YouTube player, in addition, does not display volume controls in a\nmobile environment.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"mute","description":null}]},"function":true},{"name":"pause","type":"Function","desc":"\nPauses the current video.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"pause","description":null}]},"function":true},{"name":"play","type":"Function","desc":"\nPlays the current video.\n\nNote that on certain mobile browsers, playback\n[can't be initiated programmatically](https://developers.google.com/youtube/iframe_api_reference#Mobile_considerations).\n\nIf `this.playsupported` is not `true`, calling `play()` will have no effect.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"play","description":null}]},"function":true},{"name":"playbackstarted","type":"Boolean","desc":"\nWhether playback has started.\n\nThis defaults to `false` and is set to `true` once the first 'playing' event is fired by\nthe underlying YouTube Player API.\n\nOnce set to `true`, it will remain that way indefinitely.\nPaused/buffering/ended events won't cause `playbackstarted` to reset to `false`.\nNor will loading a new video into the player.\n       ","published":true,"default":false,"notify":true},{"name":"playsupported","type":"Boolean","desc":"\nWhether programmatic `<video>.play()` for initial playback is supported in the current browser.\n\nMost mobile browsers [do not support](https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html#//apple_ref/doc/uid/TP40009523-CH5-SW1) autoplaying or scripted playback of videos.\nIf you attempt to automatically initiate playback of a `<google-youtube>`, e.g. by calling the `play()` method before\nplayback has initially begun, the YouTube Player will enter an unrecoverable \"stuck\" state.\nTo protect against this, check the value of `playsupported` and don't call `play()` if it is set to `false`.\n(You can hide/disable your custom play button, etc.)\n\nThe `playsupported` value is determined at runtime, by dynamically creating a `<video>` element with an\ninlined data source and calling `play()` on it. (Inspired by [Modernizr](https://github.com/Modernizr/Modernizr/blob/master/feature-detects/video/autoplay.js).)\n\nIf you would rather not incur the minimal overhead involved in going through this process, you can explicitly set\n`playsupported` to `true` or `false` when initializing `<google-youtube>`. This is only recommended if you know that\nyour web app will never (or only) be used on mobile browsers.\n       ","published":true,"default":null,"notify":true},{"name":"seekTo","type":"Function","desc":"\nSkips ahead (or back) to the specified number of seconds.\n\n","params":[{"name":"seconds","type":"number","desc":"Number of seconds to seek to."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"seekTo","description":null}]},"function":true},{"name":"setVolume","type":"Function","desc":"\nModifies the volume of the current video.\n\nDevelopers should take care not to break expected user experience by programmatically\nmodifying the volume on mobile browsers.\nNote that the YouTube player, in addition, does not display volume controls in a\nmobile environment.\n\n","params":[{"name":"volume","type":"number","desc":"The new volume, an integer between 0 (muted) and 100 (loudest)."}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"setVolume","description":null}]},"function":true},{"name":"state","type":"Number","desc":"\nExposes the current player state.\nUsing this attribute is an alternative to listening to `google-youtube-state-change` events,\nand can simplify the logic in templates with conditional binding.\n\nThe [possible values](https://developers.google.com/youtube/iframe_api_reference#onStateChange):\n  - -1 (unstarted)\n  - 0 (ended)\n  - 1 (playing)\n  - 2 (paused)\n  - 3 (buffering)\n  - 5 (video cued)\n       ","published":true,"default":"-1","notify":true},{"name":"thumbnail","type":"String","desc":"\nThe URL of an image to use as a custom thumbnail.\n\nThis is optional; if not provided, the standard YouTube embed (which uses the thumbnail associated\nwith the video on YouTube) will be used.\n\nIf `thumbnail` is set, than an `<img>` containing the thumbnail will be used in lieu of the actual\nYouTube embed. When the thumbnail is clicked, the `<img>` is swapped out for the actual YouTube embed,\nwhich will have [`autoplay=1`](https://developers.google.com/youtube/player_parameters#autoplay) set by default (in additional to any other player parameters specified on this element).\n\nPlease note that `autoplay=1` won't actually autoplay videos on mobile browsers, so two taps will be required\nto play the video there. Also, on desktop browsers, setting `autoplay=1` will prevent the playback\nfrom [incrementing the view count](https://support.google.com/youtube/answer/1714329) for the video.\n       ","published":true,"default":""},{"name":"unMute","type":"Function","desc":"\nUnmutes the current video.\n\nDevelopers should take care not to break expected user experience by programmatically\nmodifying the volume on mobile browsers.\nNote that the YouTube player, in addition, does not display volume controls in a\nmobile environment.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"unMute","description":null}]},"function":true},{"name":"videoId","type":"String","desc":"\nSets the id of the video to play. Changing this attribute will trigger a call\nto load a new video into the player (if `this.autoplay` is set to `1` and `playsupported` is true)\nor cue a new video otherwise.\n\nYou can [search for videos programmatically](https://developers.google.com/youtube/v3/docs/search/list)\nusing the YouTube Data API, or just hardcode known video ids to display on your page.\n     ","published":true,"default":"mN7IAaRdi_k"},{"name":"width","type":"String","desc":"\nSets the width of the player on the page.\nAccepts anything valid for a CSS measurement, e.g. '200px' or '50%'.\nIf the unit of measurement is left off, 'px' is assumed.\n       ","published":true,"default":"480px"},{"name":"__updatePlaybackStatsInterval","type":"object","private":true,"default":""},{"name":"_apiLoad","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_computeContainerStyle","type":"Function","params":[{"name":"width"},{"name":"height"}],"private":true,"function":true,"default":""},{"name":"_determinePlaySupported","type":"Function","desc":"\nDetects whether programmatic <video>.play() is supported in the current browser.\n\nThis is triggered via on-ironlocalstorage-load. The logic is:\n- If playsupported is explicitly set to true or false on the element, use that.\n- Otherwise, if there's a cached value in localStorage, use that.\n- Otherwise, create a hidden <video> element and call play() on it:\n  - If playback starts, playsupported is true.\n  - If playback doesn't start (within 500ms), playsupported is false.\n  - Whatever happens, cache the result in localStorage.\n     ","params":[],"private":true,"function":true},{"name":"_handleThumbnailTap","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_pendingVideoId","type":"string","private":true,"default":""},{"name":"_player","type":"object","private":true,"default":""},{"name":"_toHHMMSS","type":"Function","params":[{"name":"totalSeconds"}],"private":true,"function":true,"default":""},{"name":"_updatePlaybackStats","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"_videoIdChanged","type":"Function","params":[],"private":true,"function":true,"default":""},{"name":"detached","type":"Function","desc":"\nClean up the underlying Player `<iframe>` when we're removed from the DOM.\n     ","params":[],"private":true,"configuration":true,"function":true},{"name":"ready","type":"Function","desc":"\nSets fluid width/height.\n\nIf the fluid attribute is set, the aspect ratio of the video will\nbe inferred (if set in pixels), or assumed to be 16:9. The element\nwill give itself enough top padding to force the player to use the\ncorrect aspect ratio, even as the screen size changes.\n\n     ","params":[],"private":true,"configuration":true,"function":true}],"is":"google-youtube","jsdoc":{"tags":[{"tag":"demo","type":null,"name":"","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}}}